version: "3"

services:
  redis:
    image: redis:7.2.3-alpine
    container_name: redis
    command: redis-server --port 6379
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      timeout: 20s
      retries: 10
    networks:
      default:
  server-user-edgedb:
    container_name: server-user-edgedb
    image: edgedb/edgedb
    environment:
      EDGEDB_SERVER_SECURITY: insecure_dev_mode
    volumes:
      - "./dbschema:/dbschema"
    ports:
      - "5656:5656"
  server-place-postgres:
    container_name: server-place-postgres
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_USER: place
      POSTGRES_PASSWORD: place1234!!
      POSTGRES_DB: place
    ports:
      - "5433:5432"
    volumes:
      - ./pg_uuidv7/15/pg_uuidv7.so:/usr/lib/postgresql/15/lib/pg_uuidv7.so
      - ./pg_uuidv7/pg_uuidv7.control:/usr/share/postgresql/15/extension/pg_uuidv7.control
      - ./pg_uuidv7/pg_uuidv7--1.4.sql:/usr/share/postgresql/15/extension/pg_uuidv7--1.4.sql
      - ./init-extensions.sh:/docker-entrypoint-initdb.d/init-extensions.sh
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "place" ]
    command: postgres -c wal_level=logical
    platform: linux/amd64 # arm64로 할 경우 각종 extension의 so파일 들이 동작 안할 수 있음.
